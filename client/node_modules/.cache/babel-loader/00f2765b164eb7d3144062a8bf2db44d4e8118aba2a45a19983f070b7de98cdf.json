{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\New folder\\\\Test\\\\client\\\\src\\\\components\\\\HabitList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, VStack, HStack, Text, Button, Badge, useToast, IconButton, Heading, Flex, useColorModeValue, Card, CardBody, CardHeader, Progress, Stat, StatLabel, StatNumber, StatHelpText, Container, SimpleGrid, Divider } from '@chakra-ui/react';\nimport { DeleteIcon, CheckIcon, AddIcon } from '@chakra-ui/icons';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MotionBox = motion(Box);\n_c = MotionBox;\nfunction HabitList() {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const toast = useToast();\n  const navigate = useNavigate();\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('yellow.200', 'yellow.700');\n  const hoverBg = useColorModeValue('yellow.50', 'yellow.900');\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/habits');\n      setHabits(response.data);\n    } catch (error) {\n      toast({\n        title: 'Error fetching habits',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/habits/${id}`);\n      setHabits(prevHabits => prevHabits.filter(habit => habit._id !== id));\n      toast({\n        title: 'Habit deleted',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      toast({\n        title: 'Error deleting habit',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const handleComplete = async id => {\n    try {\n      await axios.post(`http://localhost:5000/api/habits/${id}/complete`);\n      setHabits(prevHabits => prevHabits.map(habit => {\n        if (habit._id === id) {\n          const today = new Date().toISOString().split('T')[0];\n          if (!habit.completedDates.includes(today)) {\n            return {\n              ...habit,\n              completedDates: [...habit.completedDates, today]\n            };\n          }\n        }\n        return habit;\n      }));\n      toast({\n        title: 'Habit marked as complete',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      toast({\n        title: 'Error marking habit as complete',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const calculateCompletionRate = habit => {\n    const today = new Date();\n    const startDate = new Date(habit.createdAt);\n    const daysDiff = Math.floor((today - startDate) / (1000 * 60 * 60 * 24));\n    if (daysDiff === 0) return 0;\n    const expectedCompletions = habit.frequency === 'daily' ? daysDiff : habit.frequency === 'weekly' ? Math.floor(daysDiff / 7) : Math.floor(daysDiff / 30);\n    return Math.round(habit.completedDates.length / expectedCompletions * 100);\n  };\n  const getTodayHabits = () => {\n    const today = new Date().toISOString().split('T')[0];\n    return habits.filter(habit => {\n      const lastCompletion = habit.completedDates[habit.completedDates.length - 1];\n      if (!lastCompletion) return true;\n      const daysSinceLastCompletion = Math.floor((new Date() - new Date(lastCompletion)) / (1000 * 60 * 60 * 24));\n      return habit.frequency === 'daily' ? daysSinceLastCompletion >= 1 : habit.frequency === 'weekly' ? daysSinceLastCompletion >= 7 : daysSinceLastCompletion >= 30;\n    });\n  };\n  const isHabitCompletedToday = habit => {\n    const today = new Date().toISOString().split('T')[0];\n    return habit.completedDates.includes(today);\n  };\n  const today = new Date();\n  const todayHabits = getTodayHabits();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.xl\",\n    py: 8,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"space-between\",\n      align: \"center\",\n      mb: 8,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        bgGradient: \"linear(to-r, yellow.400, yellow.600)\",\n        bgClip: \"text\",\n        textShadow: \"2px 2px 4px rgba(0,0,0,0.1)\",\n        children: [\"Your Habits for \", today.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this),\n        colorScheme: \"yellow\",\n        onClick: () => navigate('/add'),\n        size: \"lg\",\n        _hover: {\n          transform: 'scale(1.05)',\n          boxShadow: 'lg'\n        },\n        transition: \"all 0.2s\",\n        children: \"Add New Habit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MotionBox, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: bgColor,\n        borderWidth: \"2px\",\n        borderColor: borderColor,\n        _hover: {\n          transform: 'translateY(-4px)',\n          boxShadow: 'xl'\n        },\n        transition: \"all 0.2s\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 6,\n            align: \"stretch\",\n            children: habits.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              py: 10,\n              px: 6,\n              bg: bgColor,\n              borderRadius: \"lg\",\n              borderWidth: \"2px\",\n              borderColor: borderColor,\n              _hover: {\n                transform: 'translateY(-4px)',\n                boxShadow: 'xl'\n              },\n              transition: \"all 0.2s\",\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"md\",\n                mb: 4,\n                color: \"yellow.600\",\n                children: \"No Habits Yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                color: \"gray.600\",\n                mb: 4,\n                children: \"Start by adding your first habit to track your progress!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 31\n                }, this),\n                colorScheme: \"yellow\",\n                onClick: () => navigate('/add'),\n                _hover: {\n                  transform: 'scale(1.05)',\n                  boxShadow: 'lg'\n                },\n                transition: \"all 0.2s\",\n                children: \"Add Your First Habit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(SimpleGrid, {\n              columns: {\n                base: 1,\n                md: 2,\n                lg: 3\n              },\n              spacing: 6,\n              children: habits.map(habit => /*#__PURE__*/_jsxDEV(MotionBox, {\n                whileHover: {\n                  scale: 1.02\n                },\n                transition: {\n                  duration: 0.2\n                },\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  bg: bgColor,\n                  borderWidth: \"2px\",\n                  borderColor: isHabitCompletedToday(habit) ? 'green.400' : borderColor,\n                  _hover: {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 'xl'\n                  },\n                  transition: \"all 0.2s\",\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    children: /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"stretch\",\n                      spacing: 4,\n                      children: [/*#__PURE__*/_jsxDEV(HStack, {\n                        justify: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Heading, {\n                          size: \"md\",\n                          children: habit.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                          colorScheme: isHabitCompletedToday(habit) ? \"green\" : \"yellow\",\n                          variant: \"solid\",\n                          children: isHabitCompletedToday(habit) ? \"Completed\" : habit.frequency\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 29\n                      }, this), habit.description && /*#__PURE__*/_jsxDEV(Text, {\n                        color: \"gray.600\",\n                        children: habit.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n                        value: calculateCompletionRate(habit),\n                        colorScheme: isHabitCompletedToday(habit) ? \"green\" : \"yellow\",\n                        size: \"sm\",\n                        borderRadius: \"full\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                        justify: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Stat, {\n                          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n                            children: \"Completion Rate\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 253,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n                            children: [calculateCompletionRate(habit), \"%\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 254,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n                            children: [\"Based on \", habit.frequency, \" frequency\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 255,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            colorScheme: isHabitCompletedToday(habit) ? \"green\" : \"yellow\",\n                            onClick: () => handleComplete(habit._id),\n                            isDisabled: isHabitCompletedToday(habit),\n                            _hover: {\n                              transform: 'scale(1.05)',\n                              boxShadow: 'lg'\n                            },\n                            transition: \"all 0.2s\",\n                            children: isHabitCompletedToday(habit) ? \"Completed\" : \"Complete\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 258,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Button, {\n                            colorScheme: \"red\",\n                            variant: \"outline\",\n                            onClick: () => handleDelete(habit._id),\n                            _hover: {\n                              transform: 'scale(1.05)',\n                              boxShadow: 'lg'\n                            },\n                            transition: \"all 0.2s\",\n                            children: \"Delete\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 267,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this)\n              }, habit._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(HabitList, \"d+rO6hINKOI48I1+IQY3suBFvFA=\", false, function () {\n  return [useToast, useNavigate, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n_c2 = HabitList;\nexport default HabitList;\nvar _c, _c2;\n$RefreshReg$(_c, \"MotionBox\");\n$RefreshReg$(_c2, \"HabitList\");","map":{"version":3,"names":["React","useState","useEffect","Box","VStack","HStack","Text","Button","Badge","useToast","IconButton","Heading","Flex","useColorModeValue","Card","CardBody","CardHeader","Progress","Stat","StatLabel","StatNumber","StatHelpText","Container","SimpleGrid","Divider","DeleteIcon","CheckIcon","AddIcon","motion","axios","useNavigate","jsxDEV","_jsxDEV","MotionBox","_c","HabitList","_s","habits","setHabits","toast","navigate","bgColor","borderColor","hoverBg","fetchHabits","response","get","data","error","title","status","duration","isClosable","handleDelete","id","delete","prevHabits","filter","habit","_id","handleComplete","post","map","today","Date","toISOString","split","completedDates","includes","calculateCompletionRate","startDate","createdAt","daysDiff","Math","floor","expectedCompletions","frequency","round","length","getTodayHabits","lastCompletion","daysSinceLastCompletion","isHabitCompletedToday","todayHabits","maxW","py","children","justify","align","mb","size","bgGradient","bgClip","textShadow","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","leftIcon","colorScheme","onClick","_hover","transform","boxShadow","transition","initial","opacity","y","animate","bg","borderWidth","spacing","textAlign","px","borderRadius","color","columns","base","md","lg","whileHover","scale","name","variant","description","value","isDisabled","_c2","$RefreshReg$"],"sources":["C:/Users/james/New folder/Test/client/src/components/HabitList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Button,\r\n  Badge,\r\n  useToast,\r\n  IconButton,\r\n  Heading,\r\n  Flex,\r\n  useColorModeValue,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Progress,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  Container,\r\n  SimpleGrid,\r\n  Divider,\r\n} from '@chakra-ui/react';\r\nimport { DeleteIcon, CheckIcon, AddIcon } from '@chakra-ui/icons';\r\nimport { motion } from 'framer-motion';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst MotionBox = motion(Box);\r\n\r\nfunction HabitList() {\r\n  const [habits, setHabits] = useState([]);\r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n  \r\n  const bgColor = useColorModeValue('white', 'gray.800');\r\n  const borderColor = useColorModeValue('yellow.200', 'yellow.700');\r\n  const hoverBg = useColorModeValue('yellow.50', 'yellow.900');\r\n\r\n  useEffect(() => {\r\n    fetchHabits();\r\n  }, []);\r\n\r\n  const fetchHabits = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/habits');\r\n      setHabits(response.data);\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error fetching habits',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/habits/${id}`);\r\n      setHabits(prevHabits => prevHabits.filter(habit => habit._id !== id));\r\n      toast({\r\n        title: 'Habit deleted',\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error deleting habit',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleComplete = async (id) => {\r\n    try {\r\n      await axios.post(`http://localhost:5000/api/habits/${id}/complete`);\r\n      setHabits(prevHabits => \r\n        prevHabits.map(habit => {\r\n          if (habit._id === id) {\r\n            const today = new Date().toISOString().split('T')[0];\r\n            if (!habit.completedDates.includes(today)) {\r\n              return {\r\n                ...habit,\r\n                completedDates: [...habit.completedDates, today]\r\n              };\r\n            }\r\n          }\r\n          return habit;\r\n        })\r\n      );\r\n      toast({\r\n        title: 'Habit marked as complete',\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error marking habit as complete',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const calculateCompletionRate = (habit) => {\r\n    const today = new Date();\r\n    const startDate = new Date(habit.createdAt);\r\n    const daysDiff = Math.floor((today - startDate) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (daysDiff === 0) return 0;\r\n    \r\n    const expectedCompletions = habit.frequency === 'daily' \r\n      ? daysDiff \r\n      : habit.frequency === 'weekly' \r\n        ? Math.floor(daysDiff / 7)\r\n        : Math.floor(daysDiff / 30);\r\n    \r\n    return Math.round((habit.completedDates.length / expectedCompletions) * 100);\r\n  };\r\n\r\n  const getTodayHabits = () => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return habits.filter(habit => {\r\n      const lastCompletion = habit.completedDates[habit.completedDates.length - 1];\r\n      if (!lastCompletion) return true;\r\n      \r\n      const daysSinceLastCompletion = Math.floor(\r\n        (new Date() - new Date(lastCompletion)) / (1000 * 60 * 60 * 24)\r\n      );\r\n      \r\n      return habit.frequency === 'daily' ? daysSinceLastCompletion >= 1 :\r\n             habit.frequency === 'weekly' ? daysSinceLastCompletion >= 7 :\r\n             daysSinceLastCompletion >= 30;\r\n    });\r\n  };\r\n\r\n  const isHabitCompletedToday = (habit) => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return habit.completedDates.includes(today);\r\n  };\r\n\r\n  const today = new Date();\r\n  const todayHabits = getTodayHabits();\r\n\r\n  return (\r\n    <Container maxW=\"container.xl\" py={8}>\r\n      <Flex justify=\"space-between\" align=\"center\" mb={8}>\r\n        <Heading \r\n          size=\"xl\" \r\n          bgGradient=\"linear(to-r, yellow.400, yellow.600)\" \r\n          bgClip=\"text\"\r\n          textShadow=\"2px 2px 4px rgba(0,0,0,0.1)\"\r\n        >\r\n          Your Habits for {today.toLocaleDateString()}\r\n        </Heading>\r\n        <Button\r\n          leftIcon={<AddIcon />}\r\n          colorScheme=\"yellow\"\r\n          onClick={() => navigate('/add')}\r\n          size=\"lg\"\r\n          _hover={{ transform: 'scale(1.05)', boxShadow: 'lg' }}\r\n          transition=\"all 0.2s\"\r\n        >\r\n          Add New Habit\r\n        </Button>\r\n      </Flex>\r\n\r\n      <MotionBox\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <Card\r\n          bg={bgColor}\r\n          borderWidth=\"2px\"\r\n          borderColor={borderColor}\r\n          _hover={{ transform: 'translateY(-4px)', boxShadow: 'xl' }}\r\n          transition=\"all 0.2s\"\r\n        >\r\n          <CardBody>\r\n            <VStack spacing={6} align=\"stretch\">\r\n              {habits.length === 0 ? (\r\n                <Box\r\n                  textAlign=\"center\"\r\n                  py={10}\r\n                  px={6}\r\n                  bg={bgColor}\r\n                  borderRadius=\"lg\"\r\n                  borderWidth=\"2px\"\r\n                  borderColor={borderColor}\r\n                  _hover={{ transform: 'translateY(-4px)', boxShadow: 'xl' }}\r\n                  transition=\"all 0.2s\"\r\n                >\r\n                  <Heading size=\"md\" mb={4} color=\"yellow.600\">No Habits Yet</Heading>\r\n                  <Text color=\"gray.600\" mb={4}>\r\n                    Start by adding your first habit to track your progress!\r\n                  </Text>\r\n                  <Button\r\n                    leftIcon={<AddIcon />}\r\n                    colorScheme=\"yellow\"\r\n                    onClick={() => navigate('/add')}\r\n                    _hover={{ transform: 'scale(1.05)', boxShadow: 'lg' }}\r\n                    transition=\"all 0.2s\"\r\n                  >\r\n                    Add Your First Habit\r\n                  </Button>\r\n                </Box>\r\n              ) : (\r\n                <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={6}>\r\n                  {habits.map((habit) => (\r\n                    <MotionBox\r\n                      key={habit._id}\r\n                      whileHover={{ scale: 1.02 }}\r\n                      transition={{ duration: 0.2 }}\r\n                    >\r\n                      <Card\r\n                        bg={bgColor}\r\n                        borderWidth=\"2px\"\r\n                        borderColor={isHabitCompletedToday(habit) ? 'green.400' : borderColor}\r\n                        _hover={{ transform: 'translateY(-4px)', boxShadow: 'xl' }}\r\n                        transition=\"all 0.2s\"\r\n                      >\r\n                        <CardBody>\r\n                          <VStack align=\"stretch\" spacing={4}>\r\n                            <HStack justify=\"space-between\">\r\n                              <Heading size=\"md\">{habit.name}</Heading>\r\n                              <Badge \r\n                                colorScheme={isHabitCompletedToday(habit) ? \"green\" : \"yellow\"}\r\n                                variant=\"solid\"\r\n                              >\r\n                                {isHabitCompletedToday(habit) ? \"Completed\" : habit.frequency}\r\n                              </Badge>\r\n                            </HStack>\r\n                            {habit.description && (\r\n                              <Text color=\"gray.600\">{habit.description}</Text>\r\n                            )}\r\n                            <Progress \r\n                              value={calculateCompletionRate(habit)} \r\n                              colorScheme={isHabitCompletedToday(habit) ? \"green\" : \"yellow\"}\r\n                              size=\"sm\"\r\n                              borderRadius=\"full\"\r\n                            />\r\n                            <HStack justify=\"space-between\">\r\n                              <Stat>\r\n                                <StatLabel>Completion Rate</StatLabel>\r\n                                <StatNumber>{calculateCompletionRate(habit)}%</StatNumber>\r\n                                <StatHelpText>Based on {habit.frequency} frequency</StatHelpText>\r\n                              </Stat>\r\n                              <HStack>\r\n                                <Button\r\n                                  colorScheme={isHabitCompletedToday(habit) ? \"green\" : \"yellow\"}\r\n                                  onClick={() => handleComplete(habit._id)}\r\n                                  isDisabled={isHabitCompletedToday(habit)}\r\n                                  _hover={{ transform: 'scale(1.05)', boxShadow: 'lg' }}\r\n                                  transition=\"all 0.2s\"\r\n                                >\r\n                                  {isHabitCompletedToday(habit) ? \"Completed\" : \"Complete\"}\r\n                                </Button>\r\n                                <Button\r\n                                  colorScheme=\"red\"\r\n                                  variant=\"outline\"\r\n                                  onClick={() => handleDelete(habit._id)}\r\n                                  _hover={{ transform: 'scale(1.05)', boxShadow: 'lg' }}\r\n                                  transition=\"all 0.2s\"\r\n                                >\r\n                                  Delete\r\n                                </Button>\r\n                              </HStack>\r\n                            </HStack>\r\n                          </VStack>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </MotionBox>\r\n                  ))}\r\n                </SimpleGrid>\r\n              )}\r\n            </VStack>\r\n          </CardBody>\r\n        </Card>\r\n      </MotionBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HabitList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}