{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\New folder\\\\Test\\\\client\\\\src\\\\components\\\\HabitStats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, VStack, HStack, Text, Heading, Stat, StatLabel, StatNumber, StatHelpText, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HabitStats() {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const toast = useToast();\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/habits');\n      setHabits(response.data);\n    } catch (error) {\n      toast({\n        title: 'Error fetching habits',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const calculateCompletionRate = habit => {\n    const today = new Date();\n    const startDate = new Date(habit.createdAt);\n    const daysDiff = Math.floor((today - startDate) / (1000 * 60 * 60 * 24));\n    if (daysDiff === 0) return 0;\n    const expectedCompletions = habit.frequency === 'daily' ? daysDiff : habit.frequency === 'weekly' ? Math.floor(daysDiff / 7) : Math.floor(daysDiff / 30);\n    return Math.round(habit.completedDates.length / expectedCompletions * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 6,\n      children: \"Habit Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      align: \"stretch\",\n      children: habits.map(habit => /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        bg: \"white\",\n        borderRadius: \"lg\",\n        boxShadow: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          mb: 4,\n          children: habit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 8,\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Completion Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculateCompletionRate(habit), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: [\"Based on \", habit.frequency, \" frequency\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Completions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: habit.completedDates.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: [\"Since \", new Date(habit.createdAt).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, habit._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(HabitStats, \"f6mAgOnZQjBz5CAh5dlMHn6FCMc=\", false, function () {\n  return [useToast];\n});\n_c = HabitStats;\nexport default HabitStats;\nvar _c;\n$RefreshReg$(_c, \"HabitStats\");","map":{"version":3,"names":["React","useState","useEffect","Box","VStack","HStack","Text","Heading","Stat","StatLabel","StatNumber","StatHelpText","useToast","axios","jsxDEV","_jsxDEV","HabitStats","_s","habits","setHabits","toast","fetchHabits","response","get","data","error","title","status","duration","isClosable","calculateCompletionRate","habit","today","Date","startDate","createdAt","daysDiff","Math","floor","expectedCompletions","frequency","round","completedDates","length","children","mb","fileName","_jsxFileName","lineNumber","columnNumber","spacing","align","map","p","bg","borderRadius","boxShadow","fontSize","fontWeight","name","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/james/New folder/Test/client/src/components/HabitStats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Heading,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport axios from 'axios';\r\n\r\nfunction HabitStats() {\r\n  const [habits, setHabits] = useState([]);\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    fetchHabits();\r\n  }, []);\r\n\r\n  const fetchHabits = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/habits');\r\n      setHabits(response.data);\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error fetching habits',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const calculateCompletionRate = (habit) => {\r\n    const today = new Date();\r\n    const startDate = new Date(habit.createdAt);\r\n    const daysDiff = Math.floor((today - startDate) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (daysDiff === 0) return 0;\r\n    \r\n    const expectedCompletions = habit.frequency === 'daily' \r\n      ? daysDiff \r\n      : habit.frequency === 'weekly' \r\n        ? Math.floor(daysDiff / 7)\r\n        : Math.floor(daysDiff / 30);\r\n    \r\n    return Math.round((habit.completedDates.length / expectedCompletions) * 100);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Heading mb={6}>Habit Statistics</Heading>\r\n      <VStack spacing={6} align=\"stretch\">\r\n        {habits.map((habit) => (\r\n          <Box\r\n            key={habit._id}\r\n            p={4}\r\n            bg=\"white\"\r\n            borderRadius=\"lg\"\r\n            boxShadow=\"sm\"\r\n          >\r\n            <Text fontSize=\"lg\" fontWeight=\"bold\" mb={4}>\r\n              {habit.name}\r\n            </Text>\r\n            <HStack spacing={8}>\r\n              <Stat>\r\n                <StatLabel>Completion Rate</StatLabel>\r\n                <StatNumber>{calculateCompletionRate(habit)}%</StatNumber>\r\n                <StatHelpText>Based on {habit.frequency} frequency</StatHelpText>\r\n              </Stat>\r\n              <Stat>\r\n                <StatLabel>Total Completions</StatLabel>\r\n                <StatNumber>{habit.completedDates.length}</StatNumber>\r\n                <StatHelpText>Since {new Date(habit.createdAt).toLocaleDateString()}</StatHelpText>\r\n              </Stat>\r\n            </HStack>\r\n          </Box>\r\n        ))}\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default HabitStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}