{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\New folder\\\\Test\\\\client\\\\src\\\\components\\\\Statistics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, VStack, HStack, Text, Button, useToast, Heading, useColorModeValue, Card, CardBody, CardHeader, Container, SimpleGrid, Progress, Stat, StatLabel, StatNumber, StatHelpText, Badge, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay, AlertDialogCloseButton, useDisclosure, Flex } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MotionBox = motion(Box);\n_c = MotionBox;\nfunction Statistics() {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const toast = useToast();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const cancelRef = React.useRef();\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('yellow.200', 'yellow.700');\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/habits');\n      setHabits(response.data);\n    } catch (error) {\n      toast({\n        title: 'Error fetching habits',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const handleClearAllHabits = async () => {\n    try {\n      // Delete all habits\n      await Promise.all(habits.map(habit => axios.delete(`http://localhost:5000/api/habits/${habit._id}`)));\n      setHabits([]);\n      toast({\n        title: 'All habits cleared',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n      onClose();\n    } catch (error) {\n      toast({\n        title: 'Error clearing habits',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const calculateCompletionRate = habit => {\n    const today = new Date();\n    const startDate = new Date(habit.createdAt);\n    const daysDiff = Math.floor((today - startDate) / (1000 * 60 * 60 * 24));\n    if (daysDiff === 0) return 0;\n    const expectedCompletions = habit.frequency === 'daily' ? daysDiff : habit.frequency === 'weekly' ? Math.floor(daysDiff / 7) : Math.floor(daysDiff / 30);\n    return Math.round(habit.completedDates.length / expectedCompletions * 100);\n  };\n  const calculateOverallCompletionRate = () => {\n    if (habits.length === 0) return 0;\n    const totalRate = habits.reduce((sum, habit) => sum + calculateCompletionRate(habit), 0);\n    return Math.round(totalRate / habits.length);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.xl\",\n    py: 8,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"space-between\",\n      align: \"center\",\n      mb: 8,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        bgGradient: \"linear(to-r, yellow.400, yellow.600)\",\n        bgClip: \"text\",\n        textShadow: \"2px 2px 4px rgba(0,0,0,0.1)\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"red\",\n        variant: \"outline\",\n        onClick: onOpen,\n        _hover: {\n          transform: 'scale(1.05)',\n          boxShadow: 'lg'\n        },\n        transition: \"all 0.2s\",\n        children: \"Clear All Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MotionBox, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: bgColor,\n        borderWidth: \"2px\",\n        borderColor: borderColor,\n        _hover: {\n          transform: 'translateY(-4px)',\n          boxShadow: 'xl'\n        },\n        transition: \"all 0.2s\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          bg: \"yellow.50\",\n          borderBottom: \"2px\",\n          borderColor: borderColor,\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            size: \"lg\",\n            bgGradient: \"linear(to-r, yellow.400, yellow.600)\",\n            bgClip: \"text\",\n            textShadow: \"2px 2px 4px rgba(0,0,0,0.1)\",\n            children: \"Overall Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 6,\n            align: \"stretch\",\n            children: [/*#__PURE__*/_jsxDEV(Stat, {\n              children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n                children: \"Overall Completion Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n                children: [calculateOverallCompletionRate(), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n                children: \"Average completion rate across all habits\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Progress, {\n              value: calculateOverallCompletionRate(),\n              colorScheme: \"yellow\",\n              size: \"lg\",\n              borderRadius: \"full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        base: 1,\n        md: 2,\n        lg: 3\n      },\n      spacing: 6,\n      mt: 8,\n      children: habits.map(habit => /*#__PURE__*/_jsxDEV(MotionBox, {\n        whileHover: {\n          scale: 1.02\n        },\n        transition: {\n          duration: 0.2\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bg: bgColor,\n          borderWidth: \"2px\",\n          borderColor: borderColor,\n          _hover: {\n            transform: 'translateY(-4px)',\n            boxShadow: 'xl'\n          },\n          transition: \"all 0.2s\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"stretch\",\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(HStack, {\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"md\",\n                  children: habit.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  colorScheme: \"yellow\",\n                  children: habit.frequency\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), habit.description && /*#__PURE__*/_jsxDEV(Text, {\n                color: \"gray.600\",\n                children: habit.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Progress, {\n                value: calculateCompletionRate(habit),\n                colorScheme: \"yellow\",\n                size: \"sm\",\n                borderRadius: \"full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stat, {\n                children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n                  children: \"Completion Rate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n                  children: [calculateCompletionRate(habit), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n                  children: [\"Based on \", habit.frequency, \" frequency\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, habit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: cancelRef,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: \"Clear All Habits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: \"Are you sure you want to delete all habits? This action cannot be undone.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              ref: cancelRef,\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: handleClearAllHabits,\n              ml: 3,\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(Statistics, \"2ZTU1tPmNu56zshiCTPL2BHcKXg=\", false, function () {\n  return [useToast, useDisclosure, useColorModeValue, useColorModeValue];\n});\n_c2 = Statistics;\nexport default Statistics;\nvar _c, _c2;\n$RefreshReg$(_c, \"MotionBox\");\n$RefreshReg$(_c2, \"Statistics\");","map":{"version":3,"names":["React","useState","useEffect","Box","VStack","HStack","Text","Button","useToast","Heading","useColorModeValue","Card","CardBody","CardHeader","Container","SimpleGrid","Progress","Stat","StatLabel","StatNumber","StatHelpText","Badge","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","AlertDialogCloseButton","useDisclosure","Flex","motion","axios","jsxDEV","_jsxDEV","MotionBox","_c","Statistics","_s","habits","setHabits","toast","isOpen","onOpen","onClose","cancelRef","useRef","bgColor","borderColor","fetchHabits","response","get","data","error","title","status","duration","isClosable","handleClearAllHabits","Promise","all","map","habit","delete","_id","calculateCompletionRate","today","Date","startDate","createdAt","daysDiff","Math","floor","expectedCompletions","frequency","round","completedDates","length","calculateOverallCompletionRate","totalRate","reduce","sum","maxW","py","children","justify","align","mb","size","bgGradient","bgClip","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","variant","onClick","_hover","transform","boxShadow","transition","initial","opacity","y","animate","bg","borderWidth","borderBottom","spacing","value","borderRadius","columns","base","md","lg","mt","whileHover","scale","name","description","color","leastDestructiveRef","fontSize","fontWeight","ref","ml","_c2","$RefreshReg$"],"sources":["C:/Users/james/New folder/Test/client/src/components/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Text,\n  Button,\n  useToast,\n  Heading,\n  useColorModeValue,\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  SimpleGrid,\n  Progress,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Badge,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  AlertDialogCloseButton,\n  useDisclosure,\n  Flex,\n} from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\n\nconst MotionBox = motion(Box);\n\nfunction Statistics() {\n  const [habits, setHabits] = useState([]);\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = React.useRef();\n  \n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('yellow.200', 'yellow.700');\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/habits');\n      setHabits(response.data);\n    } catch (error) {\n      toast({\n        title: 'Error fetching habits',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const handleClearAllHabits = async () => {\n    try {\n      // Delete all habits\n      await Promise.all(\n        habits.map(habit => axios.delete(`http://localhost:5000/api/habits/${habit._id}`))\n      );\n      \n      setHabits([]);\n      toast({\n        title: 'All habits cleared',\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n      onClose();\n    } catch (error) {\n      toast({\n        title: 'Error clearing habits',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const calculateCompletionRate = (habit) => {\n    const today = new Date();\n    const startDate = new Date(habit.createdAt);\n    const daysDiff = Math.floor((today - startDate) / (1000 * 60 * 60 * 24));\n    \n    if (daysDiff === 0) return 0;\n    \n    const expectedCompletions = habit.frequency === 'daily' \n      ? daysDiff \n      : habit.frequency === 'weekly' \n        ? Math.floor(daysDiff / 7)\n        : Math.floor(daysDiff / 30);\n    \n    return Math.round((habit.completedDates.length / expectedCompletions) * 100);\n  };\n\n  const calculateOverallCompletionRate = () => {\n    if (habits.length === 0) return 0;\n    const totalRate = habits.reduce((sum, habit) => sum + calculateCompletionRate(habit), 0);\n    return Math.round(totalRate / habits.length);\n  };\n\n  return (\n    <Container maxW=\"container.xl\" py={8}>\n      <Flex justify=\"space-between\" align=\"center\" mb={8}>\n        <Heading \n          size=\"xl\" \n          bgGradient=\"linear(to-r, yellow.400, yellow.600)\" \n          bgClip=\"text\"\n          textShadow=\"2px 2px 4px rgba(0,0,0,0.1)\"\n        >\n          Statistics\n        </Heading>\n        <Button\n          colorScheme=\"red\"\n          variant=\"outline\"\n          onClick={onOpen}\n          _hover={{ transform: 'scale(1.05)', boxShadow: 'lg' }}\n          transition=\"all 0.2s\"\n        >\n          Clear All Habits\n        </Button>\n      </Flex>\n\n      <MotionBox\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <Card\n          bg={bgColor}\n          borderWidth=\"2px\"\n          borderColor={borderColor}\n          _hover={{ transform: 'translateY(-4px)', boxShadow: 'xl' }}\n          transition=\"all 0.2s\"\n        >\n          <CardHeader bg=\"yellow.50\" borderBottom=\"2px\" borderColor={borderColor}>\n            <Heading \n              size=\"lg\" \n              bgGradient=\"linear(to-r, yellow.400, yellow.600)\" \n              bgClip=\"text\"\n              textShadow=\"2px 2px 4px rgba(0,0,0,0.1)\"\n            >\n              Overall Progress\n            </Heading>\n          </CardHeader>\n          <CardBody>\n            <VStack spacing={6} align=\"stretch\">\n              <Stat>\n                <StatLabel>Overall Completion Rate</StatLabel>\n                <StatNumber>{calculateOverallCompletionRate()}%</StatNumber>\n                <StatHelpText>Average completion rate across all habits</StatHelpText>\n              </Stat>\n              <Progress \n                value={calculateOverallCompletionRate()} \n                colorScheme=\"yellow\"\n                size=\"lg\"\n                borderRadius=\"full\"\n              />\n            </VStack>\n          </CardBody>\n        </Card>\n      </MotionBox>\n\n      <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={6} mt={8}>\n        {habits.map((habit) => (\n          <MotionBox\n            key={habit._id}\n            whileHover={{ scale: 1.02 }}\n            transition={{ duration: 0.2 }}\n          >\n            <Card\n              bg={bgColor}\n              borderWidth=\"2px\"\n              borderColor={borderColor}\n              _hover={{ transform: 'translateY(-4px)', boxShadow: 'xl' }}\n              transition=\"all 0.2s\"\n            >\n              <CardBody>\n                <VStack align=\"stretch\" spacing={4}>\n                  <HStack justify=\"space-between\">\n                    <Heading size=\"md\">{habit.name}</Heading>\n                    <Badge colorScheme=\"yellow\">{habit.frequency}</Badge>\n                  </HStack>\n                  {habit.description && (\n                    <Text color=\"gray.600\">{habit.description}</Text>\n                  )}\n                  <Progress \n                    value={calculateCompletionRate(habit)} \n                    colorScheme=\"yellow\"\n                    size=\"sm\"\n                    borderRadius=\"full\"\n                  />\n                  <Stat>\n                    <StatLabel>Completion Rate</StatLabel>\n                    <StatNumber>{calculateCompletionRate(habit)}%</StatNumber>\n                    <StatHelpText>Based on {habit.frequency} frequency</StatHelpText>\n                  </Stat>\n                </VStack>\n              </CardBody>\n            </Card>\n          </MotionBox>\n        ))}\n      </SimpleGrid>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Clear All Habits\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              Are you sure you want to delete all habits? This action cannot be undone.\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancel\n              </Button>\n              <Button colorScheme=\"red\" onClick={handleClearAllHabits} ml={3}>\n                Clear All\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </Container>\n  );\n}\n\nexport default Statistics; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}